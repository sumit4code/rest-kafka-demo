server.port=9191
spring.application.name=Blue Yonder Demo App

management.health.mongo.enabled=true
spring.profiles.active=

#MongoDB Properties
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.host=${MONGO_DB_HOSTNAME}
spring.data.mongodb.username=${MONGO_DB_USERNAME}
spring.data.mongodb.password=${MONGO_DB_PASSWORD}
spring.data.mongodb.database=${MONGO_DB_NAME}
spring.data.mongodb.port=27017
spring.data.mongodb.auto-index-creation=true

#kafka Properties
spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.consumer.group-id=blue-yonder
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

##app specific conf
kafka.bootstrapAddress=${spring.kafka.producer.bootstrap-servers}
kafka.message.destination.topic=blue-yonder-event-tracking
kafka.message.consumer.topic=blue-yonder-event-tracking
kafka.topic.creation.enabled=true

kafka.topic[0].name=blue-yonder-event-tracking
kafka.topic[0].partitions=1
kafka.topic[0].replicas=1

